/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeHistory;

/**
 *
 * @author chaitanya
 */
public class ViewEmployeeDetails extends javax.swing.JPanel {

    
    /**
     * Creates new form ViewEmployeeDetails
     */
    
    EmployeeHistory history;
    
    public ViewEmployeeDetails(EmployeeHistory history) {
        initComponents();
        this.history = history;
        populateTable();
        
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableEmp = new javax.swing.JTable();
        ViewBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        FieldName = new javax.swing.JTextField();
        FieldEmpId = new javax.swing.JTextField();
        FieldAge = new javax.swing.JTextField();
        FieldGender = new javax.swing.JTextField();
        FieldStDate = new javax.swing.JTextField();
        FieldLevel = new javax.swing.JTextField();
        FieldTeamInfo = new javax.swing.JTextField();
        FieldPosTitle = new javax.swing.JTextField();
        FieldNumber = new javax.swing.JTextField();
        FieldEmail = new javax.swing.JTextField();
        LabelName = new javax.swing.JLabel();
        LabelEmpID = new javax.swing.JLabel();
        LabelAge = new javax.swing.JLabel();
        LabelGender = new javax.swing.JLabel();
        LabelStDate = new javax.swing.JLabel();
        LabelLevel = new javax.swing.JLabel();
        LabelTeamInfo = new javax.swing.JLabel();
        LabelPoTitle = new javax.swing.JLabel();
        LabelNumber = new javax.swing.JLabel();
        LabelEmail = new javax.swing.JLabel();
        UpdateBtn = new javax.swing.JButton();
        txtPhoto = new javax.swing.JLabel();
        LabelPhoto = new javax.swing.JLabel();

        jLabel1.setText("View Employee Details");

        TableEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Information", "Position Title", "Cell Phone Number", "Email ID", "Photo"
            }
        ));
        TableEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableEmpMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableEmp);

        ViewBtn.setText("View");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        FieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldNameActionPerformed(evt);
            }
        });

        LabelName.setText("Name:");

        LabelEmpID.setText("Employee ID:");

        LabelAge.setText("Age:");

        LabelGender.setText("Gender:");

        LabelStDate.setText("Start Date:");

        LabelLevel.setText("Level:");

        LabelTeamInfo.setText("Team Information:");

        LabelPoTitle.setText("Position Title:");

        LabelNumber.setText("Cell Phone Number:");

        LabelEmail.setText("Email Address:");

        UpdateBtn.setText("Update");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        txtPhoto.setText("Photo:");

        LabelPhoto.setBounds(new java.awt.Rectangle(50, 50, 50, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UpdateBtn)
                .addGap(18, 18, 18)
                .addComponent(ViewBtn)
                .addGap(28, 28, 28)
                .addComponent(DeleteBtn)
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(LabelNumber)
                                    .addComponent(LabelEmpID)
                                    .addComponent(LabelName)
                                    .addComponent(LabelStDate)
                                    .addComponent(LabelLevel)
                                    .addComponent(LabelTeamInfo)
                                    .addComponent(LabelPoTitle)
                                    .addComponent(LabelGender)
                                    .addComponent(LabelEmail)
                                    .addComponent(txtPhoto))
                                .addGap(46, 46, 46))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(LabelAge, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FieldName)
                            .addComponent(FieldEmpId)
                            .addComponent(FieldAge)
                            .addComponent(FieldGender)
                            .addComponent(FieldStDate)
                            .addComponent(FieldLevel)
                            .addComponent(FieldTeamInfo)
                            .addComponent(FieldPosTitle)
                            .addComponent(FieldNumber)
                            .addComponent(FieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(274, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(UpdateBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelName)
                    .addComponent(FieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelEmpID)
                    .addComponent(FieldEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelAge, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelGender)
                    .addComponent(FieldGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelStDate)
                    .addComponent(FieldStDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelLevel)
                    .addComponent(FieldLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelTeamInfo)
                    .addComponent(FieldTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelPoTitle)
                    .addComponent(FieldPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelNumber)
                    .addComponent(FieldNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelEmail)
                    .addComponent(FieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPhoto)
                    .addComponent(LabelPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = TableEmp.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
                
        }
        
        DefaultTableModel model = (DefaultTableModel) TableEmp.getModel();
        Employee selectedRecords = (Employee) model.getValueAt(selectedRowIndex, 0);

        FieldName.setText(String.valueOf(selectedRecords.getName()));
        FieldEmpId.setText(selectedRecords.getEmployee_ID());
        FieldAge.setText(String.valueOf(selectedRecords.getAge()));
        FieldGender.setText(selectedRecords.getGender());
        FieldStDate.setText(String.valueOf(selectedRecords.getStart_Date()));
        FieldLevel.setText(selectedRecords.getLevel());
        FieldTeamInfo.setText(selectedRecords.getTeam_Info());
        FieldPosTitle.setText(selectedRecords.getPosition_Title());
        FieldNumber.setText(String.valueOf(selectedRecords.getCell_Phone_Number()));
        FieldEmail.setText(selectedRecords.getEmail_Address());   
        LabelPhoto.setIcon(selectedRecords.getPhoto());
        
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void FieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldNameActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = TableEmp.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
                
        }
        
        DefaultTableModel model = (DefaultTableModel) TableEmp.getModel();
        Employee selectedRecords = (Employee) model.getValueAt(selectedRowIndex, 0);

        history.deleteRecords(selectedRecords);

        JOptionPane.showMessageDialog(this, "Employee record deleted");

        populateTable();

       
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = TableEmp.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
                
        }
        
        
        DefaultTableModel model = (DefaultTableModel) TableEmp.getModel();
        
        if (selectedRowIndex>=0) {
            
            model.setValueAt(FieldName.getText(),selectedRowIndex,0);
            model.setValueAt(FieldEmpId.getText(),selectedRowIndex,1);
            model.setValueAt(FieldAge.getText(),selectedRowIndex,2);
            model.setValueAt(FieldGender.getText(),selectedRowIndex,3);
            model.setValueAt(FieldStDate.getText(),selectedRowIndex,4);
            model.setValueAt(FieldLevel.getText(),selectedRowIndex,5);
            model.setValueAt(FieldTeamInfo.getText(),selectedRowIndex,6);
            model.setValueAt(FieldPosTitle.getText(),selectedRowIndex,7);
            model.setValueAt(FieldNumber.getText(),selectedRowIndex,8);
            model.setValueAt(FieldEmail.getText(),selectedRowIndex,9);

            

        
        }
         
        JOptionPane.showMessageDialog(this, "Employee Information Updated");
        
        populateTable();
        
        
        
        
         
         
        
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void TableEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableEmpMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TableEmpMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField FieldAge;
    private javax.swing.JTextField FieldEmail;
    private javax.swing.JTextField FieldEmpId;
    private javax.swing.JTextField FieldGender;
    private javax.swing.JTextField FieldLevel;
    private javax.swing.JTextField FieldName;
    private javax.swing.JTextField FieldNumber;
    private javax.swing.JTextField FieldPosTitle;
    private javax.swing.JTextField FieldStDate;
    private javax.swing.JTextField FieldTeamInfo;
    private javax.swing.JLabel LabelAge;
    private javax.swing.JLabel LabelEmail;
    private javax.swing.JLabel LabelEmpID;
    private javax.swing.JLabel LabelGender;
    private javax.swing.JLabel LabelLevel;
    private javax.swing.JLabel LabelName;
    private javax.swing.JLabel LabelNumber;
    private javax.swing.JLabel LabelPhoto;
    private javax.swing.JLabel LabelPoTitle;
    private javax.swing.JLabel LabelStDate;
    private javax.swing.JLabel LabelTeamInfo;
    private javax.swing.JTable TableEmp;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel txtPhoto;
    // End of variables declaration//GEN-END:variables

    

    private void populateTable() {
        
        int selectedRowIndex = TableEmp.getSelectedRow();

        DefaultTableModel model = (DefaultTableModel) TableEmp.getModel();
        model.setRowCount(0);
        for (Employee e  : history.getHistory()){
            
            Object[] row = new Object[11];
            row[0] = e;
            row[1] = e.getAge();
            row[2] = e.getEmail_Address();
            row[3] = e.getEmployee_ID();
            row[4] = e.getGender();
            row[5] = e.getLevel();
            row[6] = e.getCell_Phone_Number();
            row[7] = e.getPosition_Title();
            row[8] = e.getStart_Date();
            row[9] = e.getTeam_Info();
            row[10] =e.getPhoto();
            model.addRow(row);
            
        
        }
        
    }
        
    
        
    
        
        
    
        
             
    }



