/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.CreateCommunity;
import Model.CreateCommunityHistory;
import Model.CreateHospital;
import Model.Housing;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chaitanya
 */
public class UpdateCommunityPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateCommunityPanel
     * 
     */
    CreateCommunityHistory createCommunityHistory;
    public UpdateCommunityPanel(CreateCommunityHistory createCommunityHistory) {
        initComponents();
        this.createCommunityHistory = createCommunityHistory;
        displayCommunityTableInformation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CommTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblCity = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        FieldCommZipCode = new javax.swing.JTextField();
        FieldCommCIty = new javax.swing.JTextField();
        FieldHouseNo = new javax.swing.JTextField();
        lblCity1 = new javax.swing.JLabel();
        FieldCommunity = new javax.swing.JTextField();

        CommTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Community Name", "City", "House No.", "Zipcode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CommTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 154));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View/ Update Person");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCity.setText("City");

        lblCommunity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCommunity.setText("House No.");

        lblZipCode.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblZipCode.setText("Zipcode:");

        FieldCommZipCode.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        FieldCommCIty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldCommCItyActionPerformed(evt);
            }
        });

        lblCity1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCity1.setText("Community Name");

        FieldCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldCommunityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(FieldHouseNo))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(FieldCommCIty))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(FieldCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(FieldCommZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 790, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnView)
                    .addComponent(btnDelete))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FieldCommCIty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FieldHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FieldCommZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(314, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void displayCommunityTableInformation() {
        //btnSave.setVisible(false);
        DefaultTableModel model=(DefaultTableModel) CommTable.getModel();
        model.setRowCount(0);
        for(CreateCommunity C : createCommunityHistory.getCommHistory()){
            Object[] row =new Object[4];
            row[0]=C;
            row[1]= C.getHousing().getCityname();
            row[2]=C.getHousing().getHouseNo(); 
            row[3]=C.getHousing().getZipcode(); 

            
            
            model.addRow(row);
        }
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = CommTable.getSelectedRow();

        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;

        }
        CreateCommunity selectedComm=createCommunityHistory.getCommHistory().get(selectedRowIndex);
        DefaultTableModel model = (DefaultTableModel) CommTable.getModel();

        if (selectedRowIndex>=0) {

            
            Housing house = new Housing();
            house.setCityname(FieldCommCIty.getText());
            house.setCommunityName(FieldCommunity.getText());
            house.setZipcode(Integer.parseInt(FieldCommZipCode.getText()));
            house.setHouseNo(Integer.parseInt(FieldHouseNo.getText()));
            selectedComm.setHousing(house);
            displayCommunityTableInformation();



        }
        JOptionPane.showMessageDialog(this, "Community Information Updated");

        FieldCommCIty.setText("");
        FieldHouseNo.setText("");
        FieldCommZipCode.setText("");
        FieldCommunity.setText("");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = CommTable.getSelectedRow();
        if(selectedRowIndex >= 0)
        {
            CreateCommunity selectedComm=createCommunityHistory.getCommHistory().get(selectedRowIndex);
            DefaultComboBoxModel model = new DefaultComboBoxModel();

            FieldCommCIty.setText(selectedComm.getHousing().getCityname());
            FieldHouseNo.setText(String.valueOf(selectedComm.getHousing().getHouseNo()));
            FieldCommZipCode.setText(String.valueOf(selectedComm.getHousing().getZipcode()));
            FieldCommunity.setText(selectedComm.getHousing().getCommunityName());

        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select one Community Information to view all details");
        }

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = CommTable.getSelectedRow();
        if(selectedRowIndex >= 0)
        {
            CreateCommunity selectedComm=createCommunityHistory.getCommHistory().get(selectedRowIndex);

            createCommunityHistory.deleteCommRecords(selectedRowIndex);
            displayCommunityTableInformation();

        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select one Hospital to Delete all details");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void FieldCommCItyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldCommCItyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldCommCItyActionPerformed

    private void FieldCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldCommunityActionPerformed
        // TODO add your handling code here:

        boolean test = false;
        for (CreateCommunity element : createCommunityHistory.getCommHistory()) {
            if (element.getHousing().getHouseNo() == Integer.parseInt(FieldHouseNo.getText())) {
                test = true;
                JOptionPane.showMessageDialog(null, "ID already Exists", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_FieldCommunityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CommTable;
    private javax.swing.JTextField FieldCommCIty;
    private javax.swing.JTextField FieldCommZipCode;
    private javax.swing.JTextField FieldCommunity;
    private javax.swing.JTextField FieldHouseNo;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity1;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblZipCode;
    // End of variables declaration//GEN-END:variables
}
